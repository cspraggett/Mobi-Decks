<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>Home Page</title>

    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">


    <link rel="stylesheet" href="/vendor/normalize-4.1.1.css" type="text/css" />
    <link rel="stylesheet" href="/vendor/border-box.css" type="text/css" />
    <link rel="stylesheet" href="/styles/layout.css" type="text/css" />
    <link rel="stylesheet" href="/styles/game.css" type="text/css" />

    <script type="text/javascript" src="/vendor/jquery-3.0.0.js"></script>
    <script type="text/javascript" src="/scripts/app.js"></script>

    <!-- Scripts for Bootstrap -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"></script>

    <!-- Font -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat&display=swap" rel="stylesheet">

    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font: 13px Helvetica, Arial; }
        form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
        form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
        form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
        #messages { list-style-type: none; margin: 0; padding: 0; }
        #messages li { padding: 5px 10px; }
        #messages li:nth-child(odd) { background: #eee; }
      </style>

      <script>
        const cardImage = {
          heart: [
            '<img src="/images/cards/AH.png">',
            '<img src="/images/cards/2H.png">',
            '<img src="/images/cards/3H.png">',
            '<img src="/images/cards/4H.png">',
            '<img src="/images/cards/5H.png">',
            '<img src="/images/cards/6H.png">',
            '<img src="/images/cards/7H.png">',
            '<img src="/images/cards/8H.png">',
            '<img src="/images/cards/9H.png">',
            '<img src="/images/cards/10H.png">',
            '<img src="/images/cards/JH.png">',
            '<img src="/images/cards/QH.png">',
            '<img src="/images/cards/KH.png">'
          ],
          spade: [
            '<img src="/images/cards/AS.png">',
            '<img src="/images/cards/2S.png">',
            '<img src="/images/cards/3S.png">',
            '<img src="/images/cards/4S.png">',
            '<img src="/images/cards/5S.png">',
            '<img src="/images/cards/6S.png">',
            '<img src="/images/cards/7S.png">',
            '<img src="/images/cards/8S.png">',
            '<img src="/images/cards/9S.png">',
            '<img src="/images/cards/10S.png">',
            '<img src="/images/cards/JS.png">',
            '<img src="/images/cards/QS.png">',
            '<img src="/images/cards/KS.png">'
          ]
        }

        const handDivs = {player: [], opponent: []};

        $(document).ready(() => {
          console.log('document start!');

          //---------------------------------------------------------/
          // socket specific events ---------------------------------/
          //---------------------------------------------------------/

          $(function () {
            //socket initialization
            const socket = io('http://localhost:8080/game');
            $('form').submit(function(e){
              e.preventDefault(); // prevents page reloading
              socket.emit('chat message', `{ "id": "${socket.id}", "msg": "${$('#m').val()}" }`);
              $('#m').val('');
              return false;
            });

            // when recieveing chat message from server display message
            socket.on('chat message', function(msg){
              const data = JSON.parse(msg);
              console.log(data.msg);
            });

            // system message: include clear table at start of game
            socket.on('system', function(msg){
              const data = JSON.parse(msg);
              console.log('system: ' + data.msg);

              if (data.type === 'start') {
                $('.p2-won').empty();
                $('.p2-hand').empty();
                // $('.bid-table').empty();
                $('.bids').empty();
                $('.dealer-bid').empty();
                $('.p1-hand').empty();
                $('.p1-won').empty();
              }

            });

            // display current dealer card
            const dealerPlay = function(arr) {
              arr = arr.slice(1);
              $('.dealer-bid').append($('<img src="/images/cards/2C.png">'));
            }

            // place cards at the beginning at the start of a game
            const spawnCardsWithDelay = function(info, loc, index) {
              if (index < 13) {
                setTimeout(() => {
                  let num = index.toString();
                  let color = "heart";
                  if (info.id === 1) color = "spade";
                  let eff = "bot";
                  if (loc === ".p2-hand") eff = "top";
                  let innerDiv = $(`<div class="cards ${eff}">`).append($(cardImage[color][num]));

                  // this assigns a hidden value to div that holds imgs, may need it for future
                  $(innerDiv).attr({
                    value: num
                  });
                  if (loc === ".p2-hand") handDivs.opponent.push(innerDiv);
                  if (loc === ".p1-hand") handDivs.player.push(innerDiv);
                  $(loc).append($(innerDiv));
                  spawnCardsWithDelay(info, loc, index + 1);
                }, 30);
              }
            }

            // when game phase changing data is received
            socket.on('gamePhase', function(msg){
              const data = JSON.parse(msg);
              console.log(data);

              //initialization
              if (data.phase === 0) {
                handDivs = {};
                spawnCardsWithDelay(data.opponent, ".p2-hand", 0);
                spawnCardsWithDelay(data.player, ".p1-hand", 0);
                data.phase = 1;
              }
              // at the start of each phase
              if (data.phase < 14) {
              dealerPlay(data.dealer.hand);
              }

              // when game update information is received
              socket.on('gameUpdate', function(msg){
                console.log('update recieved');
                const update = JSON.parse(msg);
                console.log(update);

                if (data.player_id !== update.player * 1) {
                  if (update.item === "bid") {
                    // find location of opponent card that is sent to bid
                    cardValue = update.value;
                    cardIndex = jQuery.inArray(cardValue * 1, data.opponent.hand);

                    // remove opponent card from hand in data
                    data.opponent.hand.splice(cardIndex, 1);
                    // update opponent current bid in data
                    data.opponent.currentBid = update.value;
                    // place opponent card in bid
                    console.log('opponent hand:');
                    console.log(handDivs);
                    for (let i = 0; i < handDivs.opponent.length; i++) {
                      if (handDivs.opponent[i].attr("value") === cardValue) {
                        $(handDivs.opponent[i]).prependTo('.bids');
                        $(handDivs.opponent[i]).removeClass('cards');
                        $(handDivs.opponent[i]).addClass('row bid-card');
                      }
                    }
                    console.log('updated opponent bid');
                    console.log(data);
                  }
                }
              });

              //-------------------------------------------------------/
              // document ready events --------------------------------/
              //-------------------------------------------------------/

              // when player picks a card
              $(".p1-hand").on('click', function(event) {
                if (data.player.currentBid === "") {
                  console.log(handDivs);
                  // pick a card
                  cardValue = $(event.target.parentNode).attr("value");
                  cardIndex = jQuery.inArray(cardValue * 1, data.player.hand);
                  console.log(cardValue, cardIndex);

                  // remove card from hand in data
                  data.player.hand.splice(cardIndex, 1);
                  // update current bid in data
                  data.player.currentBid = cardValue;
                  // place card div in bid
                  $(event.target.parentNode).appendTo('.bids');
                  $(event.target.parentNode).removeClass('cards');
                  $(event.target.parentNode).addClass('row bid-card');
                  console.log(data);

                  socket.emit('gameUpdate', `{"player": "${data.player_id}", "item": "bid", "value": "${cardValue}" }`);
                }

              });
            });
          });
        })
      </script>
  </head>

  <body>
    <div class='board'>

      <!-- <div class='p2-won row'>
        <div class='centering'>
        </div>
        <div class='p2-cards-won'>
          <img src='/images/cards/2C.png' />
        </div>
        <div class='p2-cards-won'>
          <img src='/images/cards/2C.png' />
        </div>
        <div class='p2-cards-won'>
          <img src='/images/cards/2C.png' />
        </div>
      </div> -->

      <div class='p2-hand row id=p2_hand'>
        <div class='centering'>
        </div>
      </div>

      <div class='bid-table row'>

        <div class='col user-scores'>
          <div class='row'>
            <img src='/images/avatars/avatar.png' />
            <p>10</p>
          </div>
          <div class='row'>
            <img src='/images/avatars/avatar.png' />
            <p>10</p>
          </div>
        </div>

        <div class='col bids'>
          <div class='row bid-card'>
            <img src='/images/cards/2C.png' />
          </div>
          <div class='row bid-card'>
            <img src='/images/cards/2C.png' />
          </div>
        </div>

        <div class='col dealer-side'>
          <div class='dealer-bid'>
            <img src='/images/cards/2C.png' />
          </div>
        </div>

      </div>

      <div class='p1-hand row id=p2_hand' name='hi'>
        <div class='centering'>
        </div>
      </div>

      <!-- <div class='p1-won row'>
        <div class='centering'>
        </div>
        <div class='p1-cards-won'>
          <img src='/images/cards/2C.png' />
        </div>
        <div class='p1-cards-won'>
          <img src='/images/cards/2C.png' />
        </div>
      </div> -->

  </div>

 </body>

</html>
